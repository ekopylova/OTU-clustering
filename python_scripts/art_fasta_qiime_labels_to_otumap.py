# usage  : art_fasta_qiime_labels_to_otumap.py art_generated_fasta_file_qiime_labels.fasta otu_map.txt
# purpose: this script takes a FASTA file generated by art and ran through QIIME's split_libraries_fastq
#          to put file into QIIME's format and creates an OTU map using the sequence IDs storing the
#          read identifier and the parent reference sequence
# date   : 24 Nov 2014
# author : Evguenia Kopylova (jenya.kopylov@gmail.com)

import sys
import getopt
import hashlib
import re

def main(argv):
    
    # dict to store OTU ids and corresponding reads
    otu_map = {}

    with open(sys.argv[1], 'U') as fasta_fp:
        while True:
            line = fasta_fp.readline()
            if not line:
                break

            if line.startswith('>'):
                # get the read id
                seq_id = re.split('>| ',line)[1]
                # get the parent reference sequence id
                ref_id = re.split('>|-| ',line)[2]
                if ref_id in otu_map:
                    otu_map[ref_id].append(seq_id)
                else:
                    otu_map[ref_id] = [seq_id]
            
    # write the map to out file
    with open(sys.argv[2], 'w') as otu_map_fp:
        for key, value in otu_map.iteritems():
            otu_map_fp.write(key + '\t')
            for x in value:
                otu_map_fp.write(x + '\t')
            otu_map_fp.write('\n')

if __name__ == "__main__":
    main(sys.argv[1:])
